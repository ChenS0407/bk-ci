#####################################################################################################################
# 项目ID: oedbe
# 流水线ID: p-126102ca446847de849c93373165f025
# 流水线名称: go_k12_hello-编译
# 导出时间: 2021-07-09 09:47:50
#
# 注意：不支持系统凭证(用户名、密码)的导出，请检查系统凭证的完整性！
# 注意：[插件]输入参数可能存在敏感信息，请仔细检查，谨慎分享！！！
# 注意：[插件]工蜂CI不支持蓝盾老版本的插件，请在研发商店搜索新插件替换
#####################################################################################################################

---
version: "v2.0"
on:
  push:
    branches: [ "*" ]

name: "go_k12_hello-编译"
label: []
variables:
  GitPath: haoyanyang/go_k12_hello
  GitBranch: ""
  DependencyGitPaths: ""
  CommandLine: "app.id=${ProjectName} env=PRO"
  CommandLineForUAT: "app.id=${ProjectName} env=UAT"
  CommandLineForTest: "app.id=${ProjectName} env=FAT"
  DockerImage: "csighub.tencentyun.com/csig_edu_fudao/edu-common:latest"
  BuildGoVersion: "1.9.2"
  isUT: "false"
stages:
  - name: "编译/代码扫描"
    label:
      - "Build"
    jobs:
      job_xPb:
        name: "构建环境-测试、正式包"
        runs-on:
          pool-name: docker
          container:
            image: "csighub.tencentyun.com/oed_build/bingo_v2:multiplegov2"
            credentials: "${oed_image_pull}"
        steps:
          - name: "环境清理"
            run: ""
          - name: "拉取GIT（命令行）"
            uses: "gitCodeRepo@4.*"
            with:
              repositoryType: "NAME"
              repositoryHashId: ""
              repositoryName: "${GitPath}"
              pullType: "BRANCH"
              branchName: "${GitBranch}"
              tagName: ""
              commitId: ""
              localPath: "./"
              includePath: ""
              excludePath: ""
              fetchDepth: ""
              strategy: "REVERT_UPDATE"
              enableSubmodule: true
              submodulePath: ""
              enableSubmoduleRemote: false
              enableSubmoduleRecursive: true
              newEnableSubmoduleRecursive: true
              enableVirtualMergeBranch: true
              enableAutoCrlf: false
              enableGitLfs: false
              enableGitClean: true
              enableGitCleanIgnore: true
              autoCrlf: "false"
          - name: "项目检查"
            run: "# "
          - name: "企业微信机器人推送"
            uses: "WechatWorkRobot@1.*"
            with:
              inputWebhook: "ba6a31d2-3068-44f2-ad77-f230a9dade80"
              inputMsgtype: "markdown"
              inputTextContentSource: "text"
              inputTextContent: ""
              inputTextContentFileAbsOrRel: ""
              inputTextContentFile: ""
              inputRelTextContentFile: ""
              inputTextMentionedList: ""
              inputTextMentionedMobileList: ""
              inputMarkdownContentSource: "text"
              inputMarkdownContent: "❌\n### ${GitPath}代码编译失败！\n<@${BK_CI_START_WEBHOOK_USER_ID}>\
            \ 提交的代码编译失败。\n请检查。如遇蓝盾问题可重试：使用右上角“执行”按钮填入分支后执行\n>[查看流水线](http://landun.oa.com/console/pipeline/${BK_CI_PROJECT_NAME}/${BK_CI_PIPELINE_ID}/detail/${BK_CI_BUILD_ID})"
              inputMarkdownContentFileAbsOrRel: ""
              inputMarkdownContentFile: ""
              inputRelMarkdownContentFile: ""
              inputMarkdownAtShortName: false
              inputIfMarkdownAttachment: false
              inputMarkdownAttachmentActionsType: "button"
              inputIfMarkdownActions2: false
              inputMarkdownAttachmentActions2Type: "button"
              inputIfMarkdownActions3: false
              inputMarkdownAttachmentActions3Type: "button"
              inputIfMarkdownActions4: false
              inputMarkdownAttachmentActions4Type: "button"
              inputIfMarkdownActions5: false
              inputMarkdownAttachmentActions5Type: "button"
              inputImageSource: ""
              inputLocalImageAbsOrRel: ""
              inputLocalImage: ""
              inputRelLocalImage: ""
              inputImageBase64: ""
              inputImageMd5: ""
              inputNewsTitle: ""
              inputNewsUrl: ""
              inputNewsDescription: ""
              inputNewsPicurl: ""
              inputFileSource: ""
              inputLocalFileAbsOrRel: ""
              inputLocalFile: ""
              inputRelLocalFile: ""
              inputMediaId: ""
              inputVisibleToUser: ""
              inputRetry: 1
              inputProxyPolicy: "disable"
      job_4lb:
        name: "构建环境-stress"
        runs-on:
          pool-name: docker
          container:
            image: "csighub.tencentyun.com/oed_build/bingo_v2:multiplegov2"
            credentials:
              username: aaa
              password: aaaa
        steps:
          - name: "环境清理"
            run: ""
          - name: "拉取GIT（命令行）"
            uses: "gitCodeRepo@4.*"
            with:
              repositoryType: "NAME"
              repositoryHashId: ""
              repositoryName: "${GitPath}"
              pullType: "BRANCH"
              branchName: "${GitBranch}"
              tagName: ""
              commitId: ""
              localPath: "./"
              includePath: ""
              excludePath: ""
              fetchDepth: ""
              strategy: "REVERT_UPDATE"
              enableSubmodule: true
              submodulePath: ""
              enableSubmoduleRemote: false
              enableSubmoduleRecursive: true
              newEnableSubmoduleRecursive: true
              enableVirtualMergeBranch: true
              enableAutoCrlf: false
              enableGitLfs: false
              enableGitClean: true
              enableGitCleanIgnore: true
              autoCrlf: "false"
          - name: "项目检查"
            run: "# 通"
          - name: "下载go依赖"
            uses: "pythonscriptrun@6.*"
            with:
              python_version: "3"
              option_type: "online"
              scriptcode: ""
              scriptpath: ""
          - name: "编译"
            retry-times: 3
            run: "# "
          - name: "归档stress构件"
            uses: "UploadArtifactory@1.*"
            with:
              filePath: "./${ProjectName}.stress.tar.gz"
              isCustomize: false
              destPath: "./"
          - name: "企业微信机器人推送"
            uses: "WechatWorkRobot@1.*"
            with:
              inputWebhook: "ba6a31d2-3068-44f2-ad77-f230a9dade80"
              inputMsgtype: "markdown"
              inputTextContentSource: "text"
              inputTextContent: ""
              inputTextContentFileAbsOrRel: ""
              inputTextContentFile: ""
              inputRelTextContentFile: ""
              inputTextMentionedList: ""
              inputTextMentionedMobileList: ""
              inputMarkdownContentSource: "text"
              inputMarkdownContent: "❌\n### ${GitPath}代码编译失败！\n<@${BK_CI_START_WEBHOOK_USER_ID}>\
            \ 提交的代码编译失败。\n请检查。如遇蓝盾问题可重试：使用右上角“执行”按钮填入分支后执行\n>[查看流水线](http://landun.oa.com/console/pipeline/${BK_CI_PROJECT_NAME}/${BK_CI_PIPELINE_ID}/detail/${BK_CI_BUILD_ID})"
              inputMarkdownContentFileAbsOrRel: ""
              inputMarkdownContentFile: ""
              inputRelMarkdownContentFile: ""
              inputMarkdownAtShortName: false
              inputIfMarkdownAttachment: false
              inputMarkdownAttachmentActionsType: "button"
              inputIfMarkdownActions2: false
              inputMarkdownAttachmentActions2Type: "button"
              inputIfMarkdownActions3: false
              inputMarkdownAttachmentActions3Type: "button"
              inputIfMarkdownActions4: false
              inputMarkdownAttachmentActions4Type: "button"
              inputIfMarkdownActions5: false
              inputMarkdownAttachmentActions5Type: "button"
              inputImageSource: ""
              inputLocalImageAbsOrRel: ""
              inputLocalImage: ""
              inputRelLocalImage: ""
              inputImageBase64: ""
              inputImageMd5: ""
              inputNewsTitle: ""
              inputNewsUrl: ""
              inputNewsDescription: ""
              inputNewsPicurl: ""
              inputFileSource: ""
              inputLocalFileAbsOrRel: ""
              inputLocalFile: ""
              inputRelLocalFile: ""
              inputMediaId: ""
              inputVisibleToUser: ""
              inputRetry: 1
              inputProxyPolicy: "disable"
