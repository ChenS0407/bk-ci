version: v2.0

name: pipelineName

on:
  push:
    branches:
      - master
      - release/*
    branches-ignore:
      - master
      - develop
    paths:
      - src/*
    paths-ignore:
      - release
    users:
      - zhangsan
    users-ignore:
      - lisi
  tag:
    tags:
      - release_*
    tags-ignore:
      - master
    from-branches:
      - master
    users:
      - zhangsan
    users-ignore:
      - lisi
  mr:
    target-branches:
      - master
    source-branches-ignore:
      - story
    paths:
      - src/*/*
    paths-ignore:
      - build/
    action:
      - open
      - reopen
      - push-update
    users:
      - zhangsan
    users-ignore:
      - lisi
  schedules:
    cron: 0 0/5 0 0 0
    branches:
      - master
      - develop
    always: false

varivable:
  DEPLOY_TYPE: dev
  APPROVE: xxx
  GIT_USERNAME:
    value: user1
    readonly: true

stages:
  - name: "stage1"
    id: abc
    label: ${{ varivable.approve }}
    if: envs.BK_CI_EVENT == 'push' || varivable.approve
    jobs:
      job_id_1:
        name: my_job_1
        runs-on:
          - devcloud-linux
          - devcloud-mac
          - service
        container:
          image: tlinux:2.2
          credentials:
            username: user1
            password: password
        macOS:
          system-version: 10.15.4
          xcode-version: 10.4
        service:
          image: mysql:8.0
          credentials:
            username: user1
            password: pwd
          port: 3306
          volumes:
            - src
            - src:target
            - ${WORKSPACE}:/data/workspace
          env:

          command: mysqld
        if:
          - variables.DEPLOY_TYPE == 'dev' || cancelled()
        steps:
          - name: xxx
            id: idxxx
            if: xxx
            use: UploadArtifactory@1.*
            with:
              path: test.txt
            timeout-minutes: 480
            continue-on-error: false
            retry-times: 0
            env:

          - run: |
              echo "stage1, job_id_1"
              echo "hello world!" >> test.txt

        timeout-minutes: 480
        env:

        continue-on-error: false
        strategy:
          matrix:

          fast-kill: true
          max-parallel: 10
        depend-on:
          - job1
          - job2

      job_id_2:
        name: my_job_2
        steps:
          - run: |
              echo "stage1, job_id_2"

on-fail:
  job1:
    name: test1
  job2:
    name: test2
  steps:
    - run: |
      echo "do something when the upstream fails"

extends:
  template: epc-build.yml
  parameters:
    repo: "hello/my-first-repo"
resources:
  repositories:
    - repository: epc-ieg-bk-common
      name: ieg/epc-ieg-bk-common
      ref: refs/tags/v1.0

notices:
  - type: email
    title: this is a email notice
    content: this is a email notice,content is hello.
    receivers:
      - user1
      - user2
    ccs:
      - user3
    if: ${{ failure() }}
  - type: wework-message
    title: this is a wework-message notice
    content: this is a wework-message notice,content is hello.
    receivers:
      - user1
      - user2
  - type: wework-chat
    chat-id: xxxxxxxxxx
    content: this is a wework-chat notice,content is hello.
