	# 构建机层服务分发
	location ~ /(ms/|)([\w-_]+)/api/build/(.*) {
		auth_request /auth/build;
		auth_request_set $projectId $sent_http_x_devops_project_id;
		auth_request_set $pipelineId $sent_http_x_devops_pipeline_id;
		auth_request_set $buildId $sent_http_x_devops_build_id;
		auth_request_set $agentId $sent_http_x_devops_agent_id;
		auth_request_set $vmSeqId $sent_http_x_devops_vm_sid;
		auth_request_set $vmName $sent_http_x_devops_vm_name;
		auth_request_set $channelCode $sent_http_x_devops_channel_code;
		set $access_type 'build';
		set $service $2;
		set $path $3;
		set $target '';

		access_by_lua_file 'conf/lua/router_srv.lua';

		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-DEVOPS-PROJECT-ID $projectId;
		proxy_set_header X-DEVOPS-PIPELINE-ID $pipelineId;
		proxy_set_header X-DEVOPS-BUILD-ID $buildId;
		proxy_set_header X-DEVOPS-VM-SID $vmSeqId;
		proxy_set_header X-DEVOPS-VM-NAME $vmName;
		proxy_set_header X-DEVOPS-CHANNEL-CODE $channelCode;

		proxy_set_header X-PIPELINE-ID $pipelineId;

		proxy_http_version 1.1;
		# 反向代理到目标ip，端口，路径和参数
		proxy_pass http://$target/api/build/$path?$args;
	}


	# dockerhost层服务分发
	location ~ /(ms/|)([\w-_]+)/api/dockerhost/(.*) {
		set $access_type 'build';
		set $service $2;
		set $path $3;
		set $target '';

		access_by_lua_file 'conf/lua/router_srv.lua';
		proxy_http_version 1.1;
		# 反向代理到目标ip，端口，路径和参数
		proxy_pass http://$target/api/dockerhost/$path?$args;
	}


	# dockerhost层服务分发
	location ~ /(ms/|)([\w-_]+)/api/gw/(.*) {
		header_filter_by_lua_file 'conf/lua/cors_filter.lua';
		set $access_type 'gw';
		set $service $2;
		set $path $3;
		set $target '';

		access_by_lua_file 'conf/lua/router_srv.lua';
		
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-DEVOPS-RID $uuid;
		proxy_http_version 1.1;
		
		# 反向代理到目标ip，端口，路径和参数
		proxy_pass http://$target/api/gw/$path?$args;
	}

	# 第三方构建机agent
    location ~ /(ms/|)([\w-_]+)/api/buildAgent/(.*) {
        set $access_type 'build';
        set $service $2;
        set $path $3;
        set $target '';

        access_by_lua_file 'conf/lua/router_srv.lua';

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

		proxy_http_version 1.1;
        proxy_pass http://$target/api/buildAgent/$path?$args;
    }

	# OP层服务分发
	location ~ /(ms/|)([\w-_]+)/api/op/(.*) {
	  header_filter_by_lua_file 'conf/lua/cors_filter.lua';
	  auth_request /auth/service;
	  set $access_type 'op';
	  set $service $2;
	  set $path $3;
	  set $target '';
	  access_by_lua_file 'conf/lua/router_srv.lua';
	  proxy_set_header X-Real-IP $remote_addr;
	  proxy_set_header X-DEVOPS-RID $uuid;

	  proxy_http_version 1.1;
	  # 反向代理到目标ip，端口，路径和参数
	  proxy_pass http://$target/api/op/$path?$args;
	}

	# user层服务分发
	location ~ /(ms/|)([\w-_]+)/api/user/(.*) {
		header_filter_by_lua_file 'conf/lua/cors_filter.lua';
		auth_request /auth/user;
		
		# 设置auth的变量
		include auth.request.set.conf;

		set $access_type 'user';
		set $service $2;
		set $path $3;
		set $target '';
		access_by_lua_file 'conf/lua/router_srv.lua';

		# 设置proxy header的变量
		include proxy.set.header.conf;

		# 反向代理到目标ip，端口，路径和参数
		proxy_pass http://$target/api/user/$path?$args;
	}

	# api-html/user层服务分发
	location ~ /(ms/|)([\w-_]+)/api-html/user/(.*) {
		#将错误统一处理成html格式返回
		proxy_intercept_errors on;
		include error.html.conf;
		header_filter_by_lua_file 'conf/lua/cors_filter.lua';
		auth_request /auth/user;
		auth_request_set $uid $sent_http_x_devops_uid;
		auth_request_set $access_token $sent_http_x_devops_access_token;
		auth_request_set $bk_token $sent_http_x_devops_bk_token;
		set $access_type 'user';
		set $service $2;
		set $path $3;
		set $target '';
		access_by_lua_file 'conf/lua/router_srv.lua';
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-DEVOPS-UID $uid;
		proxy_set_header X-DEVOPS-SID $uid;
		proxy_set_header X-DEVOPS-SNAME $uid;
		proxy_set_header X-DEVOPS-RID $uuid;
		proxy_set_header X-DEVOPS-BK-TOKEN $bk_token;
		proxy_set_header X-DEVOPS-ACCESS-TOKEN $access_token;

		proxy_http_version 1.1;
		# 反向代理到目标ip，端口，路径和参数
		proxy_pass http://$target/api/user/$path?$args;
	}

	# service层服务分发
	location ~ /(ms/|)([\w-_]+)/api/service/(.*) {
		auth_request /auth/service;
		set $access_type 'service';
		set $service $2;
		set $path $3;
		set $target '';
		access_by_lua_file 'conf/lua/router_srv.lua';
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-DEVOPS-RID $uuid;

		proxy_http_version 1.1;
		# 反向代理到目标ip，端口，路径和参数
		proxy_pass http://$target/api/service/$path?$args;
	}

	# 外部层服务分发
	location ~ /(ms/|)([\w-_]+)/api/external/(.*) {
		set $access_type 'external';
		set $service $2;
		set $path $3;
		set $target '';
		access_by_lua_file 'conf/lua/router_srv.lua';
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-DEVOPS-RID $uuid;

		proxy_http_version 1.1;
		# 反向代理到目标ip，端口，路径和参数
		proxy_pass http://$target/api/external/$path?$args;
	}

	# apigw层服务分发
	location ~ /(ms/|)([\w-_]+)/api/(apigw|apigw-user|apigw-app)/(.*) {
		set $access_type $3;
		set $service $2;
		set $path $4;
		set $target '';
		access_by_lua_file 'conf/lua/router_srv.lua';
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-DEVOPS-RID $uuid;

		proxy_http_version 1.1;
		# 反向代理到目标ip，端口，路径和参数
		proxy_pass http://$target/api/$access_type/$path?$args;
	}

	# user层服务的ws分发
	location ~ /(ms/|)([\w-_]+)/(websocket|ws)/user/(.*) {
		header_filter_by_lua_file 'conf/lua/cors_filter.lua';
		auth_request /auth/user;
		auth_request_set $uid $sent_http_x_devops_uid;
		auth_request_set $access_token $sent_http_x_devops_access_token;
		auth_request_set $bk_token $sent_http_x_devops_bk_token;
		set $access_type 'user';
		set $service $2;
		set $source $3;
		set $path $4;
		set $target '';
		access_by_lua_file 'conf/lua/router_srv.lua';
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-DEVOPS-UID $uid;
		proxy_set_header X-DEVOPS-SID $uid;
		proxy_set_header X-DEVOPS-SNAME $uid;
		proxy_set_header X-DEVOPS-RID $uuid;
		proxy_set_header X-DEVOPS-BK-TOKEN $bk_token;
		proxy_set_header X-DEVOPS-ACCESS-TOKEN $access_token;
		# websocket
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "Upgrade";

		proxy_http_version 1.1;
		# 反向代理到目标ip，端口，路径和参数
		proxy_pass http://$target/$source/user/$path?$args;
	}

	
