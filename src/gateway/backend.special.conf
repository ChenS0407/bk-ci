	# 对流水线心跳进行单独的处理
	location = /process/api/build/builds/heartbeat {
  		error_page  500 = @buildend_json_handler;

		auth_request /auth/build;
		auth_request_set $projectId $sent_http_x_devops_project_id;
		auth_request_set $pipelineId $sent_http_x_devops_pipeline_id;
		auth_request_set $buildId $sent_http_x_devops_build_id;
		auth_request_set $agentId $sent_http_x_devops_agent_id;
		auth_request_set $vmSeqId $sent_http_x_devops_vm_sid;
		auth_request_set $vmName $sent_http_x_devops_vm_name;
		auth_request_set $channelCode $sent_http_x_devops_channel_code;
		set $access_type 'build';
		set $service "process";
		set $target '';
		
		access_by_lua_file 'conf/lua/router_srv.lua';

		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-DEVOPS-PROJECT-ID $projectId;
		proxy_set_header X-DEVOPS-PIPELINE-ID $pipelineId;
		proxy_set_header X-DEVOPS-BUILD-ID $buildId;
		proxy_set_header X-DEVOPS-VM-SID $vmSeqId;
		proxy_set_header X-DEVOPS-VM-NAME $vmName;
		proxy_set_header X-DEVOPS-CHANNEL-CODE $channelCode;

		proxy_set_header X-SODA-PID $projectId;
		proxy_set_header X-PIPELINE-ID $pipelineId;
		proxy_set_header X-SODA-BID $buildId;
		proxy_set_header X-SODA-VM-SID $vmSeqId;
		proxy_set_header X-SODA-VM-NAME $vmName;

		proxy_http_version 1.1;
		# 反向代理到目标ip，端口，路径和参数
		proxy_pass http://$target/api/build/builds/heartbeat?$args;
	}

	# 对流水线心跳进行单独的处理
	location = /ms/process/api/build/builds/heartbeat {
  		error_page  500 = @buildend_json_handler;

		auth_request /auth/build;
		auth_request_set $projectId $sent_http_x_devops_project_id;
		auth_request_set $pipelineId $sent_http_x_devops_pipeline_id;
		auth_request_set $buildId $sent_http_x_devops_build_id;
		auth_request_set $agentId $sent_http_x_devops_agent_id;
		auth_request_set $vmSeqId $sent_http_x_devops_vm_sid;
		auth_request_set $vmName $sent_http_x_devops_vm_name;
		auth_request_set $channelCode $sent_http_x_devops_channel_code;
		set $access_type 'build';
		set $service "process";
		set $target '';
		
		access_by_lua_file 'conf/lua/router_srv.lua';

		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-DEVOPS-PROJECT-ID $projectId;
		proxy_set_header X-DEVOPS-PIPELINE-ID $pipelineId;
		proxy_set_header X-DEVOPS-BUILD-ID $buildId;
		proxy_set_header X-DEVOPS-VM-SID $vmSeqId;
		proxy_set_header X-DEVOPS-VM-NAME $vmName;
		proxy_set_header X-DEVOPS-CHANNEL-CODE $channelCode;

		proxy_set_header X-SODA-PID $projectId;
		proxy_set_header X-PIPELINE-ID $pipelineId;
		proxy_set_header X-SODA-BID $buildId;
		proxy_set_header X-SODA-VM-SID $vmSeqId;
		proxy_set_header X-SODA-VM-NAME $vmName;

		proxy_http_version 1.1;
		# 反向代理到目标ip，端口，路径和参数
		proxy_pass http://$target/api/build/builds/heartbeat?$args;
	}

	# 外部回调分发(codesvn|codegit|gitlab WEBHOOK)
	location ~ /external/scm/(codesvn|codegit|gitlab)/commit {
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		set $access_type 'build';
		set $service 'process';
		set $provider $1;
		set $target '';
		access_by_lua_file 'conf/lua/router_srv.lua';
		proxy_pass http://$target/api/external/scm/$provider/commit?$args;
	}
	# 外部code的webhook
	location ~ /external/code/hook/(commit|oauth) {
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		set $access_type 'build';
		set $service 'code';
		set $provider $1;
		set $target '';
		access_by_lua_file 'conf/lua/router_srv.lua';
		proxy_pass http://$target/api/external/code/hook/$provider?$args;
	}
	# 第三方构建机安装脚本
    location ~ /external/agents/(\w+)/(install|uninstall|agent|jre|upgrader|script_upgrader) {
   		#proxy_set_header X-Real-IP $remote_addr;
    	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    	set $access_type 'build';
    	set $service 'environment';
    	set $agentId $1;
    	set $target '';
    	access_by_lua_file 'conf/lua/router_srv.lua';
    	proxy_pass http://$target/api/external/thirdPartyAgent/$agentId/$2?$args;
    }

	# 外部回调分发(安全加固回调)
	location ~ /external/(security|wetest)/callback {
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		set $access_type 'build';
		set $service 'process';
		set $target '';
		access_by_lua_file 'conf/lua/router_srv.lua';
		proxy_pass http://$target/api/external/$1/callback?$args;
	}

	# config模块的配置
	location ~ /(config)/(.*) {
		set $access_type '';
		set $service $1;
		set $path $2;
		set $target '';
		access_by_lua_file 'conf/lua/router_srv.lua';
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-DEVOPS-RID $uuid;

		add_header Cache-Control no-cache;

		proxy_http_version 1.1;
		# 反向代理到目标ip，端口，路径和参数
		proxy_pass http://$target/$path?$args;
	}