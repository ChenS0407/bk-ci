	#构建机上传文件到流水线和报告仓库
	location ~ /artifactory/(archive|report)/upload/build/(.*) {
		include method.put.only.conf;
		auth_request /auth/build;
		auth_request_set $projectId $sent_http_x_devops_project_id;
		auth_request_set $pipelineId $sent_http_x_devops_pipeline_id;
		auth_request_set $buildId $sent_http_x_devops_build_id;
		auth_request_set $agentId $sent_http_x_devops_agent_id;
		auth_request_set $vmSeqId $sent_http_x_devops_vm_sid;

		include set.artifactory.conf;

		set $access_type 'build';
		set $type $1;
		set $path $2;
		proxy_http_version 1.1;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header Authorization $authcode;
		proxy_set_header Host $domain;
		# 反向代理到目标ip，端口，路径和参数

		proxy_pass http://$target/generic-local/bk-$type/$projectId/$pipelineId/$buildId/$path?$args;
	}


	#构建机从流水线和报告仓库下载文件
	location ~ /artifactory/(archive|report)/download/build/(.*) {
		include method.get.only.conf;
		auth_request /auth/build;
		auth_request_set $projectId $sent_http_x_devops_project_id;
		auth_request_set $pipelineId $sent_http_x_devops_pipeline_id;
		auth_request_set $buildId $sent_http_x_devops_build_id;
		auth_request_set $agentId $sent_http_x_devops_agent_id;
		auth_request_set $vmSeqId $sent_http_x_devops_vm_sid;

		include set.artifactory.conf;

		set $access_type 'build';
		set $type $1;
		set $path $2;
		proxy_http_version 1.1;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header Authorization $authcode;
		proxy_set_header Host $domain;
		# 反向代理到目标ip，端口，路径和参数

		proxy_pass http://$target/generic-local/bk-$type/$projectId/$path?$args;
	}


	#构建机下载和上传文件到自定义和原子仓库
	location ~ /artifactory/(custom|atom)/(upload|download)/build/(.*) {
		auth_request /auth/build;
		auth_request_set $projectId $sent_http_x_devops_project_id;
		auth_request_set $pipelineId $sent_http_x_devops_pipeline_id;
		auth_request_set $buildId $sent_http_x_devops_build_id;
		auth_request_set $agentId $sent_http_x_devops_agent_id;
		auth_request_set $vmSeqId $sent_http_x_devops_vm_sid;

		include set.artifactory.conf;

		set $access_type 'build';
		set $type $1;
		set $active $2;
		set $path $3;
		proxy_http_version 1.1;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header Authorization $authcode;
		proxy_set_header Host $domain;
		# 反向代理到目标ip，端口，路径和参数

		proxy_pass http://$target/generic-local/bk-$type/$projectId/$path?$args;
	}

	#构建机下载和上传文件到自定义和原子仓库
	location ~ /artifactory/(custom|atom|archive|report|file)/(upload|download)/service/(.*) {
		auth_request /auth/service;

		include set.artifactory.conf;

		set $access_type 'service';
		set $type $1;
		set $active $2;
		set $path $3;
		proxy_http_version 1.1;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header Authorization $authcode;
		proxy_set_header Host $domain;
		# 反向代理到目标ip，端口，路径和参数

		proxy_pass http://$target/generic-local/bk-$type/$path?$args;
	}


	#构建机上传和下载docker文件到docker仓库
	location ~ /artifactory/(docker)/(upload|download)/build/(.*) {
		auth_request /auth/build;
		auth_request_set $projectId $sent_http_x_devops_project_id;
		auth_request_set $pipelineId $sent_http_x_devops_pipeline_id;
		auth_request_set $buildId $sent_http_x_devops_build_id;
		auth_request_set $agentId $sent_http_x_devops_agent_id;
		auth_request_set $vmSeqId $sent_http_x_devops_vm_sid;

		include set.artifactory.conf;

		set $access_type 'build';
		set $type $1;
		set $active $2;
		set $path $3;
		proxy_http_version 1.1;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header Authorization $authcode;
		proxy_set_header Host $domain;
		# 反向代理到目标ip，端口，路径和参数

		proxy_pass http://$target/docker-local/bk-$type/$projectId/$path?$args;
	}

	#用户下载自定义/原子/流水线/报告仓库的文件
	location ~ /artifactory/(custom|atom|archive|report|file)/download/user/(.*) {
		header_filter_by_lua_file 'conf/lua/cors_filter.lua';
		proxy_intercept_errors on;
		include error.html.conf;
		include method.get.only.conf;
		auth_request /auth/user;
		auth_request_set $uid $sent_http_x_devops_uid;
		auth_request_set $access_token $sent_http_x_devops_access_token;
		auth_request_set $bk_token $sent_http_x_devops_bk_token;

		include set.artifactory.conf;

		set $access_type 'user';
		set $type $1;
		set $path $2;
		proxy_http_version 1.1;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

		proxy_set_header X-DEVOPS-UID $uid;
		proxy_set_header X-DEVOPS-SID $uid;
		proxy_set_header X-DEVOPS-SNAME $uid;
		proxy_set_header X-DEVOPS-RID $uuid;
		proxy_set_header X-DEVOPS-BK-TOKEN $bk_token;
		proxy_set_header X-DEVOPS-ACCESS-TOKEN $access_token;

		proxy_set_header Authorization $authcode;
		proxy_set_header Host $domain;
		# 反向代理到目标ip，端口，路径和参数

		proxy_pass http://$target/generic-local/bk-$type/$path?$args;
	}

	#用户下载自定义/原子/流水线/报告仓库的文件(浏览器预览)
	location ~ /artifactory/(custom|atom|archive|report|file)/view/user/(.*) {
		header_filter_by_lua_file 'conf/lua/cors_filter.lua';
		proxy_intercept_errors on;
		include error.html.conf;
		include method.get.only.conf;
		auth_request /auth/user;
		auth_request_set $uid $sent_http_x_devops_uid;
		auth_request_set $access_token $sent_http_x_devops_access_token;
		auth_request_set $bk_token $sent_http_x_devops_bk_token;

		include set.artifactory.conf;

		set $access_type 'user';
		set $type $1;
		set $path $2;
		proxy_http_version 1.1;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

		proxy_set_header X-DEVOPS-UID $uid;
		proxy_set_header X-DEVOPS-SID $uid;
		proxy_set_header X-DEVOPS-SNAME $uid;
		proxy_set_header X-DEVOPS-RID $uuid;
		proxy_set_header X-DEVOPS-BK-TOKEN $bk_token;
		proxy_set_header X-DEVOPS-ACCESS-TOKEN $access_token;

		proxy_set_header Authorization $authcode;
		proxy_set_header Host $domain;

		more_set_headers "Content-Disposition: ";
		# 反向代理到目标ip，端口，路径和参数

		proxy_pass http://$target/generic-local/bk-$type/$path?$args;
	}


	#用户下载自定义/原子/流水线/报告仓库的文件(浏览器预览)
	location ~ /artifactory/(custom|atom|archive|report)/view/user/(.*) {
		header_filter_by_lua_file 'conf/lua/cors_filter.lua';
		proxy_intercept_errors on;
		include error.html.conf;
		include method.get.only.conf;
		auth_request /auth/user;
		auth_request_set $uid $sent_http_x_devops_uid;
		auth_request_set $access_token $sent_http_x_devops_access_token;
		auth_request_set $bk_token $sent_http_x_devops_bk_token;

		include set.artifactory.conf;

		set $access_type 'user';
		set $type $1;
		set $path $2;
		proxy_http_version 1.1;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

		proxy_set_header X-DEVOPS-UID $uid;
		proxy_set_header X-DEVOPS-SID $uid;
		proxy_set_header X-DEVOPS-SNAME $uid;
		proxy_set_header X-DEVOPS-RID $uuid;
		proxy_set_header X-DEVOPS-BK-TOKEN $bk_token;
		proxy_set_header X-DEVOPS-ACCESS-TOKEN $access_token;

		proxy_set_header Authorization $authcode;
		proxy_set_header Host $domain;

		add_header Content-Disposition "";
		# 反向代理到目标ip，端口，路径和参数

		proxy_pass http://$target/generic-local/bk-$type/$projectId/$path?$args;
	}


	#用户下载自定义/原子/流水线/报告仓库的文件
	location ~ /artifactory/(docker)/download/user/(.*) {
		header_filter_by_lua_file 'conf/lua/cors_filter.lua';
		proxy_intercept_errors on;
		include error.html.conf;
		include method.get.only.conf;
		auth_request /auth/user;
		auth_request_set $uid $sent_http_x_devops_uid;
		auth_request_set $access_token $sent_http_x_devops_access_token;
		auth_request_set $bk_token $sent_http_x_devops_bk_token;

		include set.artifactory.conf;

		set $access_type 'user';
		set $type $1;
		set $path $2;
		proxy_http_version 1.1;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

		proxy_set_header X-DEVOPS-UID $uid;
		proxy_set_header X-DEVOPS-SID $uid;
		proxy_set_header X-DEVOPS-SNAME $uid;
		proxy_set_header X-DEVOPS-RID $uuid;
		proxy_set_header X-DEVOPS-BK-TOKEN $bk_token;
		proxy_set_header X-DEVOPS-ACCESS-TOKEN $access_token;

		proxy_set_header Authorization $authcode;
		proxy_set_header Host $domain;
		# 反向代理到目标ip，端口，路径和参数
		
		proxy_pass http://$target/docker-local/bk-$type/$path?$args;
	}


	#构建机从流水线获取仓库的uri
  	location ~ /artifactory/(custom|atom|archive|report)/api/build/(.*) {
		include method.get.only.conf;
		auth_request /auth/build;
		auth_request_set $projectId $sent_http_x_devops_project_id;
		auth_request_set $pipelineId $sent_http_x_devops_pipeline_id;
		auth_request_set $buildId $sent_http_x_devops_build_id;
		auth_request_set $agentId $sent_http_x_devops_agent_id;
		auth_request_set $vmSeqId $sent_http_x_devops_vm_sid;

		include set.artifactory.conf;

		set $access_type 'build';
		set $type $1;
		set $path $2;
		proxy_http_version 1.1;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header Authorization $authcode;
		proxy_set_header Host $domain;

		proxy_pass http://$target/api/storage/generic-local/bk-$type/$projectId/$path?$args;
  	}

	#查询jfrog aql
  	location ~ /artifactory/(search)/api/service/(.*) {
		auth_request /auth/service;

		include set.artifactory.conf;

		set $access_type 'service';
		set $type $1;
		set $path $2;
		proxy_http_version 1.1;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header Authorization $authcode;
		proxy_set_header Host $domain;

		proxy_pass http://$target/api/search/aql?$args;
  	}
